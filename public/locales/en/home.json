{
  "about": "about",
  "available": "I am available for freelance or full-time positions. Contact me and let's talk.",
  "azclothes": "I built this app on next.js and it's hosted on Vercel. It consists of a working ECommerce model, but some functionality will still be added through another branch. It currently has user authentication provided on all data entry pages through Next_auth. The MongoDB database was implemented to store products and users (for now the only way to insert data is via seed) with the help of mongoose, bcrypt and axios to manange the data. PayPal API was implemented as a payment method and your response immediately influences the payment status of the order. Paypal is in 'development mode' for security. React-hook-form was used to help with data insertion. Finally, the application has a global and responsive layout.",
  "back": "Back",
  "cani": "I built this application in Next JS. Initially it was a freelance job and I had to do it a little fast so I used some packages like Swiper for a bealtiful and clean carousel, EmailJs for an complete email sending service. It has the responsive design using Tailwind.",
  "check": "Check out some of my latest projects",
  "code": "code",
  "con": "CONNECT WITH ME",
  "contact": "CONTACT",
  "demo": "Demo",
  "email": "Email",
  "front": "Front-End Developer",
  "frontend": "A Front-End Developer",
  "hi": "Hi, I'm",
  "i_build": "What I've Build",
  "i_do": "What I Do",
  "leg": "Let's build something legendary together",
  "less": "less",
  "let_conn": "LET'S CONNECT",
  "lets_build": "Let's build",
  "message": "Message",
  "miniblog": "\nI built this app in React JS. Consists of a Blog of public posts and authenticated users. This app features user authentication with Firebase as well as the Firestore cloud storage database. This app is extracting data from each user's individual posts. Only authenticated users can create their own posts with their respective username, hashtags, title and description. Posts will be pulled from the database and displayed publicly to those who do not have a Blog account. The User Dashboard has the option for the user to edit their posts, delete or view them. The useContext hook was implemented for the filter that allows only authenticated users to create posts.",
  "minindex": "I'm a front-end web developer specializing in building and designing exceptional digital experiences. Currently, I'm focused on bulding responsive fron-end web applications while learning back-end technologies",
  "more": "More Info",
  "name": "Name",
  "netflix": "I built this application in React JS and is hosted on Vercel. This app features user authentication with firebase as well as the firestore cloud storage database. This application is pulling movie data from an the IMDB movie API and displaying different categories. It features horizontal sliding and a featured selection. The useContext hook is also being implemented for app-wide state management.",
  "normal": "I am not your normal developer",
  "over": "Overview",
  "phone": "Phone Number",
  "project": "Project",
  "projects": "projects",
  "reactgram": "I built this app in React JS. It consists of a social media of posts and interactions between users with a robust backend. This app features user authentication and protected routes with express router, jsonwebtoken to generate a unique user token and middlewares like express-validator and multer used to facilitate backend validations as well as storage data upload. bcrypt.js keeps passwords safe by attaching a salt to them. User interactions occur through the publication of photos, likes and comments. User profiles are public and can be viewed by clicking on the user's name. Each user has their profile picture, name and bio. Each photo has an image, title, likes, comments and author. These two models were implemented with Mongoose Schemas to store the unique information. This application has a business rule closed to authenticated users only. The User Dashboard has the option for the user to edit their posts, delete or view them. Redux was implemented to serve as a provider for HTTP requests on front-end pages, handling requests, and states.",
  "resume": "My name is Jo√£o Marcos A. Azeredo, I was born in 1993 in the city of Rio de Janeiro - RJ. I have always been very connected to technology, after all, I was born in the decade when the population began to have access to computers and the internet. I got to know the technology area, more precisely, Web Development, in 2014 when I started my BS in Systems Analysis. I worked in other areas and it wasn't until 2022 that I got back to working with HTML & CSS to make some minor edits on a small business website I was operating. What I thought would be a few minor edits turned into love for programming",
  "secret_w": "I built this app in React JS and it's hosted on GitHub pages. A lot of programming logic was used to define a maximum number of attempts, letters already used and letters that were guessed from the word, game punctuation and finally the import of a database of words in JSON. The useCallback hook was used to transform the JSON file data into two objects containing a word and a random category.",
  "seemore": "More",
  "send": "Send Message",
  "skills": "skills",
  "subject": "Subject",
  "tech": "Technologies",
  "together": "together",
  "touch": "Get In Touch",
  "tstodo": "I built this app in TypeScript and it's a simple to-do list. It is based on a single interface where the attributes of the variables that are consumed via props are assigned. tailwind was used to style the app.",
  "who": "Who I Am"
}
